ESTRUCTURA BÁSICA CMS:

- Existen módulos autocontenidos, con disparado de eventos y posibilidad de hacer 'deploy' de los mismos en la aplicación.
- Los módulos deben estar acorde a una especificación dada, cumpliendo unos estándares de interfaz, para
poder procesarlos por lotes
- Un módulo individual tiene un layout propio, para que las URL tengan sentido al acceder a la app
- Usamos un backend de datos, sea MongoDB, MySQL, XML o ficheros de texto
- En este backend queda registrado el deployment de módulos para una URL dada.
- A través de los eventos disparados por cada módulo se interopera entre los mismos.
- Los eventos de cada módulo deben tener un namespace propio y único
- Debería existir un sistema de repositorio de módulos, de tal forma que podamos
descargarlos e integrarlos dentro de nuestra instalación del CMS
- Definiremos varios perfiles de uso:

	- Usuario básico: Ve la página web e interactúa con ella
	- Usuario diseñador / maquetador: Crea el HTML + CSS del módulo
	- Usuario desarrollador: Crea el JS del módulo y lo eventos que se disparan
	- Usuario administrador: Controla todo el CMS y es capaz de resolver los
	problemas que surjan en el mismo (de momento, yo, Alejandro)

- Existe un frontend a través del cual se hace deploy de módulos, cada
uno de ellos con su configuración. Cuadrícula y visual. (jQuery)
- Existe la posibilidad de poner varias veces el mismo módulo en una página
- Existen layouts por defecto para los elementos que no los tengan
- Todos los módulos son serializables a JSON, de tal forma que son transferibles
a través de HTTP.
- Debemos poder acceder a la aplicación de dos formas:
	
	- Acceso puramente AJAX: Todo se controla a través de JavaScript, a través de eventos, 
	usando, preferiblemente, socket.io para controlar los eventos producidos. Este es el
	modo por defecto de uso.
	- Acceso por URL: Este tipo de acceso está mayormente pensado para los robots de indexación.
	Les suministraremos una serie de URL's para poder acceder a la indexación de los módulos.
	Lo que se verá, al acceder a esa URL, es el módulo centralmente, con el layout por defecto,
	o el suministrado al mismo.

DETALLES DE IMPLEMENTACIÓN:

- Los módulos deben tener una propiedad deployContext, siendo ésta un objeto JSON que especifica el
contexto en el que se halla este módulo. Las variables del objeto son (a ampliar durante desarrollo):

	- isCentral
	- xPos
	- yPos
	- tplUsed
	- cssUsed
	
- Asimismo tienen un método render() que permite, en función de lo especificado en deployContext, renderizar
el contenido donde y como corresponde.
- Existe un fichero data/html/LayoutBase.html que contiene la base de renderización de módulos. De momento solo es
un esqueleto vacío, a rellenar con las capas modulares.